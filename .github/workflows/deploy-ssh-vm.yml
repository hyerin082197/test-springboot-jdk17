name: Deploy Spring Boot App to VM

on:
  workflow_dispatch:
    inputs:
      runner:
        required: true
        type: choice
        options:
          - arc-runner-axccoe-dev
          - ubuntu-latest
      environment:
        description: "Deployment environment"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - prd

jobs:
  build:
    name: Build using Maven for ${{ inputs.environment }}
    runs-on: "${{ inputs.runner }}"

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Configure Maven settings.xml
        run: |
          cat <<EOF > ./settings.xml
          <settings>
            <servers>
              <server>
                <id>github</id>
                <username>${{ github.actor }}</username>
                <password>${{ secrets.GH_ADMIN_TOKEN }}</password>
              </server>
            </servers>
          </settings>
          EOF

      # 여기서 .war 파일을 생성하도록 수정합니다.
      - name: Package war file
        run: mvn -B -DskipTests package -Pwar --file ./pom.xml -s ./settings.xml

      - name: Log in to Azure CLI
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS_COMMON }}
        run: |
          echo "$AZURE_CREDENTIALS" > azure_credentials.json
          az login \
            --service-principal \
            --username $(jq -r .clientId azure_credentials.json) \
            --password $(jq -r .clientSecret azure_credentials.json) \
            --tenant $(jq -r .tenantId azure_credentials.json)
          az account set --subscription $(jq -r .subscriptionId azure_credentials.json)
        shell: bash

      # Blob Storage에 .war 파일을 업로드합니다.
      - name: Upload the WAR file to Blob Storage
        run: |
          az storage blob upload \
            --account-name ${{ vars.AZURE_COMMON_STORAGE_ACCOUNT }} \
            --container-name ${{ vars.AZURE_COMMON_ARTIFACT_CONTAINER }} \
            --file ./target/*.war \
            --name ${{ vars.APP_NAME }}.war \
            --overwrite \
            --auth-mode login
        shell: bash

  deploy:
    name: Deploy to VM for ${{ inputs.environment }}
    runs-on: "${{ inputs.runner }}"
    needs: build
    steps:
      - name: Deploy java app
        uses: ./.github/workflows/actions/deploy-ssh-blob-vm
        with:
          environment: "${{ inputs.environment }}"
          storage-account: "${{ vars.AZURE_COMMON_STORAGE_ACCOUNT }}"
          storage-container: "${{ vars.AZURE_COMMON_ARTIFACT_CONTAINER }}"
          storage-access-key: "${{ secrets.AZURE_COMMON_STORAGE_ACCESS_KEY }}"
          ssh-private-key: "${{ secrets.AZURE_VM_SSH_PRIVATE_KEY_DEV }}"
          vm-prefix: "${{ vars.AZURE_VM_PREFIX }}"
          vm-suffix: "vm"
          vm-ip: "${{ secrets.AZURE_VM_IP_DEV }}"
          vm-user: "${{ vars.AZURE_VM_USER }}"
          app-name: "${{ vars.APP_NAME }}"
